// ####################
// MARGIN AND PADDING
// ####################

@use "sass:string";

@function str-replace($string, $search, $replace: "") {
	$index: string.index($string, $search);
	@if $index {
		@return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
	}
	@return $string;
}

$sides: ("", "x", "y", "t", "r", "b", "l") !default;

@function getProps($prop, $side) {
	@if $side == "" {
		@return $prop;
	}
	@if $side == "x" {
		@return "#{$prop}-right", "#{$prop}-left";
	}
	@if $side == "y" {
		@return "#{$prop}-top", "#{$prop}-bottom";
	}
	@if $side == "t" {
		@return "#{$prop}-top";
	}
	@if $side == "r" {
		@return "#{$prop}-right";
	}
	@if $side == "b" {
		@return "#{$prop}-bottom";
	}
	@if $side == "l" {
		@return "#{$prop}-left";
	}
	@return null;
}

// MARGIN

@each $side in $sides {
	.m#{$side}-auto {
		@each $prop in getProps("margin", $side) {
			#{$prop}: auto !important;
		}
	}

	$v: 0;
	@for $i from 0 through 200 {
		$dec: $i * 0.1;
		$classDec: str-replace("#{$dec}", ".", "_");
		.m#{$side}-#{$classDec} {
			@each $prop in getProps("margin", $side) {
				#{$prop}: #{$dec}rem !important;
			}
		}
	}
}

// PADDING

@each $side in $sides {
	.p#{$side}-auto {
		@each $prop in getProps("padding", $side) {
			#{$prop}: auto !important;
		}
	}

	$v: 0;
	@for $i from 0 through 200 {
		$dec: $i * 0.1;
		$classDec: str-replace("#{$dec}", ".", "_");
		.p#{$side}-#{$classDec} {
			@each $prop in getProps("padding", $side) {
				#{$prop}: #{$dec}rem !important;
			}
		}
	}
}
